[["index.html", "Benchmark snRNA-seq data analysis methods Chapter 1 About 1.1 Comments on snRNA-seq vs scRNA-seq", " Benchmark snRNA-seq data analysis methods Hong Jiang 2022-11-08 Chapter 1 About This is a minimal benchmark for analyzing snRNA-seq data, especially with scverse and bioconductor communities. It will be continuously updated throughout my PhD years. From my current experience: bioconductor has more solid basement of biological (annotation) data questions and methods to tackle them (except for dl) are usually first developed in R, then the python community would propose competing methods. Since seruat comes earlier than scanpy the scanpy community evolves fast but somehow the developers are not considering better integrating each other’s new features packages in R is in general easier to use, though I personally is more used to python and could adapt more myself R utils are too easily to crash with the same hardware facility, same data size and same kind of job 1.1 Comments on snRNA-seq vs scRNA-seq advantages of snRNA-seq: does not require the preservation of cellular integrity during sample preparation, especially dissociation. disadvantages of snRNA-seq: loss of biological signal for genes with little nuclear localization. Interpretation of DE results: assumption: nuclear abundances are a good proxy for the overall expression profile. considerations: transcripts for strongly expressed genes might localize to the cytoplasm for efficient translation and subsequently be lost upon stripping, while genes with the same overall expression but differences in the rate of nuclear export may appear to be differentially expressed between clusters. In the most pathological case, higher snRNA-seq abundances may indicate nuclear sequestration of transcripts for protein-coding genes and reduced activity of the relevant biological process, contrary to the usual interpretation of the effect of upregulation. "],["preprocess.html", "Chapter 2 Preprocess 2.1 Empty droplets", " Chapter 2 Preprocess In this chapter, we deal with empty droplets, ambient RNAs and doublets, especially in snRNA-seq setting. 2.1 Empty droplets We have no prior knowledge about whether a particular library (i.e., cell barcode) corresponds to cell-containing or empty droplets. Thus, we need to call cells from empty droplets based on the observed expression profiles. This is not entirely straightforward as empty droplets can contain ambient (i.e., extracellular) RNA that can be captured and sequenced, resulting in non-zero counts for libraries that do not contain any cell. The aim of empty droplets detection in most cases is to retains nucleus that would have been discarded by other threshold on total counts. 2.1.1 DropletUtils DropletUtils implemented utils to distinguish empty droplets and barcode swapping. Here we focused on empty droplet detection: 0. filter out genes with counts of zero for all barcodes 1. estimate the profile of the ambient RNA pool (default as gene count across barcodes with total counts &lt; 100) 2. test each barcode for deviations from this profile using a Dirichlet-multinomial model of UMI count sampling 2.1 Barcodes with significant deviations are considered to be genuine cells 2.2 Use a knee point filter to ensure that barcodes with large total counts are always retained 2.1.2 Cellbender Cellbender provides a deep generative model of background-contaminated counts. The model is used for learning the background RNA profile, distinguishing cell-containing droplets from empty ones, and retrieving background-free gene expression profiles. The model schema and network representation can be found in Figure 1g,h This method has been benchmarked with UMI counts thresholding and DecontX but not DropletUtils ## Ambient contamination I tested the combinations of the aforementioned empty droplets and ambient RNA detection methods (See diagram) with our in-house data and I’m convinced that Cellbender and cluster-based methods are of advantage. DiagrammeR::grViz(&quot; digraph graph2 { graph [layout = dot, rankdir = LR] # node definitions with substituted label text node [shape = oval] a [label = &#39;@@1&#39;] b [label = &#39;@@2&#39;] c [label = &#39;@@3&#39;] d [label = &#39;@@4&#39;] a -&gt; c a -&gt; d b -&gt; c b -&gt; d } [1]: &#39;Cellbender&#39; [2]: &#39;emptyDrops&#39; [3]: &#39;controlAmbience&#39; [4]: &#39;cluster with empty drops&#39; &quot;, height = 100) "],["cross.html", "Chapter 3 Cross-references 3.1 Chapters and sub-chapters 3.2 Captioned figures and tables", " Chapter 3 Cross-references Cross-references make it easier for your readers to find and link to elements in your book. 3.1 Chapters and sub-chapters There are two steps to cross-reference any heading: Label the heading: # Hello world {#nice-label}. Leave the label off if you like the automated heading generated based on your heading title: for example, # Hello world = # Hello world {#hello-world}. To label an un-numbered heading, use: # Hello world {-#nice-label} or {# Hello world .unnumbered}. Next, reference the labeled heading anywhere in the text using \\@ref(nice-label); for example, please see Chapter 3. If you prefer text as the link instead of a numbered reference use: any text you want can go here. 3.2 Captioned figures and tables Figures and tables with captions can also be cross-referenced from elsewhere in your book using \\@ref(fig:chunk-label) and \\@ref(tab:chunk-label), respectively. See Figure 3.1. par(mar = c(4, 4, .1, .1)) plot(pressure, type = &#39;b&#39;, pch = 19) Figure 3.1: Here is a nice figure! Don’t miss Table 3.1. knitr::kable( head(pressure, 10), caption = &#39;Here is a nice table!&#39;, booktabs = TRUE ) Table 3.1: Here is a nice table! temperature pressure 0 0.0002 20 0.0012 40 0.0060 60 0.0300 80 0.0900 100 0.2700 120 0.7500 140 1.8500 160 4.2000 180 8.8000 "],["parts.html", "Chapter 4 Parts", " Chapter 4 Parts You can add parts to organize one or more book chapters together. Parts can be inserted at the top of an .Rmd file, before the first-level chapter heading in that same file. Add a numbered part: # (PART) Act one {-} (followed by # A chapter) Add an unnumbered part: # (PART\\*) Act one {-} (followed by # A chapter) Add an appendix as a special kind of un-numbered part: # (APPENDIX) Other stuff {-} (followed by # A chapter). Chapters in an appendix are prepended with letters instead of numbers. "],["footnotes-and-citations.html", "Chapter 5 Footnotes and citations 5.1 Footnotes 5.2 Citations", " Chapter 5 Footnotes and citations 5.1 Footnotes Footnotes are put inside the square brackets after a caret ^[]. Like this one 1. 5.2 Citations Reference items in your bibliography file(s) using @key. For example, we are using the bookdown package (Xie 2022) (check out the last code chunk in index.Rmd to see how this citation key was added) in this sample book, which was built on top of R Markdown and knitr (xie2015?) (this citation was added manually in an external file book.bib). Note that the .bib files need to be listed in the index.Rmd with the YAML bibliography key. The RStudio Visual Markdown Editor can also make it easier to insert citations: https://rstudio.github.io/visual-markdown-editing/#/citations References "],["blocks.html", "Chapter 6 Blocks 6.1 Equations 6.2 Theorems and proofs 6.3 Callout blocks", " Chapter 6 Blocks 6.1 Equations Here is an equation. \\[\\begin{equation} f\\left(k\\right) = \\binom{n}{k} p^k\\left(1-p\\right)^{n-k} \\tag{6.1} \\end{equation}\\] You may refer to using \\@ref(eq:binom), like see Equation (6.1). 6.2 Theorems and proofs Labeled theorems can be referenced in text using \\@ref(thm:tri), for example, check out this smart theorem 6.1. Theorem 6.1 For a right triangle, if \\(c\\) denotes the length of the hypotenuse and \\(a\\) and \\(b\\) denote the lengths of the other two sides, we have \\[a^2 + b^2 = c^2\\] Read more here https://bookdown.org/yihui/bookdown/markdown-extensions-by-bookdown.html. 6.3 Callout blocks The R Markdown Cookbook provides more help on how to use custom blocks to design your own callouts: https://bookdown.org/yihui/rmarkdown-cookbook/custom-blocks.html "],["sharing-your-book.html", "Chapter 7 Sharing your book 7.1 Publishing 7.2 404 pages 7.3 Metadata for sharing", " Chapter 7 Sharing your book 7.1 Publishing HTML books can be published online, see: https://bookdown.org/yihui/bookdown/publishing.html 7.2 404 pages By default, users will be directed to a 404 page if they try to access a webpage that cannot be found. If you’d like to customize your 404 page instead of using the default, you may add either a _404.Rmd or _404.md file to your project root and use code and/or Markdown syntax. 7.3 Metadata for sharing Bookdown HTML books will provide HTML metadata for social sharing on platforms like Twitter, Facebook, and LinkedIn, using information you provide in the index.Rmd YAML. To setup, set the url for your book and the path to your cover-image file. Your book’s title and description are also used. This gitbook uses the same social sharing data across all chapters in your book- all links shared will look the same. Specify your book’s source repository on GitHub using the edit key under the configuration options in the _output.yml file, which allows users to suggest an edit by linking to a chapter’s source file. Read more about the features of this output format here: https://pkgs.rstudio.com/bookdown/reference/gitbook.html Or use: ?bookdown::gitbook "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
